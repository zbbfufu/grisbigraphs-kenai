/*
 * FileImports.java
 *
 * Copyright (C) 2009 Francois Duchemin
 *
 * This file is part of GrisbiGraphs.
 *
 * GrisbiGraphs is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * GrisbiGraphs is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with GrisbiGraphs; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 */
package gg.db.entities;

import org.joda.time.DateTime;

/**
 * <B>FileImport</B>
 * <UL>
 * <LI>An entry is inserted in the table FILE_IMPORTS every time a Grisbi file is imported in the Derby local database</LI>
 * <LI>Some details about the import are inserted (import duration, success...)</LI>
 * </UL>
 * @author Francois Duchemin
 */
public class FileImport {

    /** ID (generated by Derby) */
    private Long id;
    /** Import date */
    private DateTime importedOn;
    /** File path of the imported Grisbi file */
    private String filePath;
    /** Import duration */
    private Long importDuration;
    /** Success */
    private Boolean success;

    /** Creates a new instance of FileImport */
    public FileImport() {
    }

    /**
     * Creates a new instance of FileImport
     * @param importedOn Import date
     * @param filePath File path of the imported Grisbi file
     * @param importDuration Import duration
     * @param success Success flag (true if the Grisbi file is correctly imported, false otherwise)
     */
    public FileImport(DateTime importedOn, String filePath, Long importDuration, Boolean success) {
        setImportedOn(importedOn);
        setFilePath(filePath);
        setImportDuration(importDuration);
        setSuccess(success);
    }

    /**
     * Gets the ID of the import log
     * @return the id (generated by Derby)
     */
    public Long getId() {
        return id;
    }

    /**
     * Sets the ID of the import
     * @param id the id to set
     */
    public void setId(Long id) {
        if (id == null) {
            throw new IllegalArgumentException("The parameter 'id' is null");
        }
        this.id = id;
    }

    /**
     * Gets the import date
     * @return Import date
     */
    public DateTime getImportedOn() {
        return importedOn;
    }

    /**
     * Sets the import date
     * @param importedOn Import date
     */
    public void setImportedOn(DateTime importedOn) {
        if (importedOn == null) {
            throw new IllegalArgumentException("The parameter 'importedOn' is null");
        }
        this.importedOn = importedOn;
    }

    /**
     * Gets the file path of the imported Grisbi file
     * @return File path of the grisbi file
     */
    public String getFilePath() {
        return filePath;
    }

    /**
     * Sets the file path of the Grisbi file
     * @param filePath File path of the Grisbi file
     */
    public void setFilePath(String filePath) {
        if (filePath == null) {
            throw new IllegalArgumentException("The parameter 'filePath' is null");
        }
        this.filePath = filePath;
    }

    /**
     * Gets the import duration
     * @return Import duration (in milliseconds)
     */
    public Long getImportDuration() {
        return importDuration;
    }

    /**
     * Sets the import duration
     * @param importDuration Import duration (in milliseconds)
     */
    public void setImportDuration(Long importDuration) {
        if (importDuration == null) {
            throw new IllegalArgumentException("The parameter 'importDuration' is null");
        }
        this.importDuration = importDuration;
    }

    /**
     * Gets the success flag
     * @return true if the Grisbi file was correctly imported, false otherwise
     */
    public Boolean getSuccess() {
        return success;
    }

    /**
     * Sets the success flag
     * @param success true if the Grisbi file is correctly imported, false otherwise
     */
    public void setSuccess(Boolean success) {
        if (success == null) {
            throw new IllegalArgumentException("The parameter 'success' is null");
        }
        this.success = success;
    }

    /**
     * Gets the success of the Grisbi file import (whether the Grisbi file was correctly imported or not)
     * @return Success
     */
    @Override
    public String toString() {
        assert (importedOn != null);
        return importedOn.toString();
    }
}