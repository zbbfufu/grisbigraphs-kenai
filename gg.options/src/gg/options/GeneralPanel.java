/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package gg.options;

import org.openide.util.NbPreferences;

final class GeneralPanel extends javax.swing.JPanel {

    /** General option controller */
    private final GeneralOptionsPanelController controller;
    /** Key used in the properties file to identidy the 'display zeros' property */
    public static final String DISPLAY_ZEROS_KEY = "DisplayZeros";
    /** Key used in the properties file to identidy the 'calculate sums' property */
    public static final String CALCULATE_SUMS_KEY = "CalculateSums";

    public GeneralPanel(GeneralOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
        // TODO listen to changes in form fields and call controller.changed()
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxDisplayZeros = new javax.swing.JCheckBox();
        jCheckBoxCalculateSums = new javax.swing.JCheckBox();

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBoxDisplayZeros, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.jCheckBoxDisplayZeros.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBoxCalculateSums, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.jCheckBoxCalculateSums.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxCalculateSums)
                    .addComponent(jCheckBoxDisplayZeros))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBoxCalculateSums)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxDisplayZeros)
                .addContainerGap(100, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Reads settings and initializes GUI
     */
    public void load() {
        jCheckBoxDisplayZeros.setSelected(NbPreferences.forModule(GeneralPanel.class).getBoolean(DISPLAY_ZEROS_KEY, true));
        jCheckBoxCalculateSums.setSelected(NbPreferences.forModule(GeneralPanel.class).getBoolean(CALCULATE_SUMS_KEY, true));
    }

    /**
     * Saves settings
     */
    public void store() {
        NbPreferences.forModule(GeneralPanel.class).putBoolean(DISPLAY_ZEROS_KEY, jCheckBoxDisplayZeros.isSelected());
        NbPreferences.forModule(GeneralPanel.class).putBoolean(CALCULATE_SUMS_KEY, jCheckBoxCalculateSums.isSelected());
    }

    /**
     * Checks whether all fields have been entered correctly or not
     * @return true if the form is valid, false otherwise
     */
    boolean valid() {
        return true;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBoxCalculateSums;
    private javax.swing.JCheckBox jCheckBoxDisplayZeros;
    // End of variables declaration//GEN-END:variables
}
